 Method Summary
static int 	binarySearch(List list, Object key, Comparator c)
          Searches the specified List for the specified Object using the binary search algorithm.
static int 	binarySearch(List list, Object key)
          Searches the specified List for the specified Object using the binary search algorithm.
static void 	copy(List dest, List src)
          Copies all of the elements from one List into another.
static Enumeration 	enumeration(Collection c)
          Returns an Enumeration over the specified Collection.
static void 	fill(List list, Object o)
          Replaces all of the elements of the specified List with the specified element.
static Object 	max(Collection coll, Comparator comp)
          Returns the maximum element of the given Collection, according to the order induced by the specified Comparator.
static Object 	max(Collection coll)
          Returns the maximum element of the given Collection, according to the natural ordering of its elements.
static Object 	min(Collection coll, Comparator comp)
          Returns the minimum element of the given Collection, according to the order induced by the specified Comparator.
static Object 	min(Collection coll)
          Returns the minimum element of the given Collection, according to the natural ordering of its elements.
static List 	nCopies(int n, Object o)
          Returns an immutable List consisting of n copies of the specified Object.
static void 	reverse(List l)
          Reverses the order of the elements in the specified List.
static Comparator 	reverseOrder()
          Returns a Comparator that imposes the reverse of the natural ordering on a collection of Comparable objects.
static void 	shuffle(List list, Random rnd)
          Randomly permute the specified list using the specified source of randomness.
static void 	shuffle(List list)
          Randomly permutes the specified list using a default source of randomness.
static Set 	singleton(Object o)
          Returns an immutable Set containing only the specified Object.
static void 	sort(List list, Comparator c)
          Sorts the specified List according to the order induced by the specified Comparator.
static void 	sort(List list)
          Sorts the specified List into ascending order, according to the natural ordering of its elements.
static Collection 	synchronizedCollection(Collection c)
          Returns a synchronized (thread-safe) Collection backed by the specified Collection.
static List 	synchronizedList(List list)
          Returns a synchronized (thread-safe) List backed by the specified List.
static Map 	synchronizedMap(Map m)
          Returns a synchronized (thread-safe) Map backed by the specified Map.
static Set 	synchronizedSet(Set s)
          Returns a synchronized (thread-safe) Set backed by the specified Set.
static SortedMap 	synchronizedSortedMap(SortedMap m)
          Returns a synchronized (thread-safe) SortedMap backed by the specified SortedMap.
static SortedSet 	synchronizedSortedSet(SortedSet s)
          Returns a synchronized (thread-safe) SortedSet backed by the specified SortedSet.
static Collection 	unmodifiableCollection(Collection c)
          Returns an unmodifiable view of the specified Collection.
static List 	unmodifiableList(List list)
          Returns an unmodifiable view of the specified List.
static Map 	unmodifiableMap(Map m)
          Returns an unmodifiable view of the specified Map.
static Set 	unmodifiableSet(Set s)
          Returns an unmodifiable view of the specified Set.
static SortedMap 	unmodifiableSortedMap(SortedMap m)
          Returns an unmodifiable view of the specified SortedMap.
static SortedSet 	unmodifiableSortedSet(SortedSet s)
          Returns an unmodifiable view of the specified SortedSet. 
